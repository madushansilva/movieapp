[{"D:\\ReactDemo\\movieapp\\src\\index.js":"1","D:\\ReactDemo\\movieapp\\src\\reportWebVitals.js":"2","D:\\ReactDemo\\movieapp\\src\\App.js":"3","D:\\ReactDemo\\movieapp\\src\\components\\movies.jsx":"4","D:\\ReactDemo\\movieapp\\src\\services\\movieServices.js":"5","D:\\ReactDemo\\movieapp\\src\\services\\httpService.js":"6","D:\\ReactDemo\\movieapp\\src\\services\\logService.js":"7","D:\\ReactDemo\\movieapp\\src\\components\\paggination.jsx":"8","D:\\ReactDemo\\movieapp\\src\\util\\pagination.js":"9","D:\\ReactDemo\\movieapp\\src\\services\\genreService.js":"10","D:\\ReactDemo\\movieapp\\src\\components\\genreList.jsx":"11","D:\\ReactDemo\\movieapp\\src\\components\\navbar.jsx":"12","D:\\ReactDemo\\movieapp\\src\\components\\moviesForm.jsx":"13"},{"size":637,"mtime":1610373195692,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":753,"mtime":1610374716283,"results":"17","hashOfConfig":"15"},{"size":3389,"mtime":1610380995618,"results":"18","hashOfConfig":"15"},{"size":229,"mtime":1610373233219,"results":"19","hashOfConfig":"15"},{"size":514,"mtime":1610350314083,"results":"20","hashOfConfig":"15"},{"size":299,"mtime":1610350368935,"results":"21","hashOfConfig":"15"},{"size":598,"mtime":1610357623923,"results":"22","hashOfConfig":"15"},{"size":197,"mtime":1610357953206,"results":"23","hashOfConfig":"15"},{"size":261,"mtime":1610358747688,"results":"24","hashOfConfig":"15"},{"size":399,"mtime":1610361014478,"results":"25","hashOfConfig":"15"},{"size":673,"mtime":1610375286599,"results":"26","hashOfConfig":"15"},{"size":394,"mtime":1610374749806,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1d2cibl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"D:\\ReactDemo\\movieapp\\src\\index.js",[],["64","65"],"D:\\ReactDemo\\movieapp\\src\\reportWebVitals.js",[],"D:\\ReactDemo\\movieapp\\src\\App.js",["66"],"import React, { Component } from 'react';\nimport './App.css';\nimport Movie from './components/movies';\nimport NavBar from './components/navbar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport MovieForm from './components/moviesForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <NavBar/>\n      <Switch>\n          <Route\n            path=\"/movies/:name\"\n            render={(props) => <MovieForm {...props}  />}\n          ></Route>\n          <Route\n            path=\"/movies\"\n            render={(props) => <Movie {...props}  />}\n          ></Route>\n        \n          <Redirect from=\"/\" to=\"/movies\" />\n        </Switch>\n      </React.Fragment>\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\ReactDemo\\movieapp\\src\\components\\movies.jsx",["67"],"import React, { Component } from 'react';\r\nimport { getMovies} from '../services/movieServices';\r\nimport Paggination from './paggination';\r\nimport { paginate } from '../util/pagination';   \r\nimport { getGenres } from '../services/genreService';\r\nimport GenreList from './genreList';\r\nimport _ from \"lodash\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres:[],\r\n        pageSize:3,\r\n        currentPage:1,\r\n        selectedGenre:null,\r\n        sortColumn: { path: 'title', order: 'asd' },\r\n      }\r\n\r\n      async componentDidMount() {\r\n      \r\n        const { data: movies } = await getMovies();\r\n        const genres= [{name:\"All Genres\"},...getGenres()]\r\n        this.setState({movies,genres});\r\n        \r\n        \r\n      }\r\n      handlePageChange=page=>{\r\n          this.setState({currentPage:page})\r\n\r\n      }\r\n\r\n      handleGenreSelect=genre=>{\r\n        this.setState({selectedGenre:genre, currentPage:1});\r\n      }\r\n      handleSort=path=>{\r\n\r\n        const sortColumn={...this.state.sortColumn};\r\n        if(sortColumn.path===path)\r\n            sortColumn.order =(sortColumn.order==\"asc\")?\"desc\": \"asc\";\r\n        \r\nelse{\r\n    sortColumn.path=path;\r\n    sortColumn.order=\"asc\";\r\n}\r\n\r\n        this.setState({sortColumn});\r\n      }\r\n    render() { \r\n        const {length:count}=this.state.movies;\r\n        const{pageSize,currentPage,movies:allMovies,selectedGenre,sortColumn}=this.state;\r\n\r\n        const filtered= selectedGenre && selectedGenre._id?allMovies.filter(m=>m.genre===selectedGenre.name):allMovies;\r\n        \r\n        const sorted= _.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n        \r\n        const movies=paginate(sorted,currentPage,pageSize);\r\n        if(count===0)\r\n        return(<p>There are no movies in the database</p>)\r\n\r\n        return (<React.Fragment>\r\n              <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                  <GenreList items={this.state.genres} onItemSelect={this.handleGenreSelect}\r\n                  selectedItem={selectedGenre}/>\r\n              </div>\r\n        <div className=\"col\">\r\n        <p>Showing {filtered.length} movies in the database</p>\r\n            <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"name\")}>Name </th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"productionYear\")}>Year</th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"genre\")}>Genre</th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"synopsisShort\")}>Synopsis</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {movies.map(movie=><tr>\r\n                    <td > <Link to={`/movies/${movie.name}`}>{movie.name}</Link></td>\r\n                    <td >{movie.productionYear}</td>\r\n                    <td >{movie.genre}</td>\r\n                    <td >{movie.synopsisShort}</td>\r\n                </tr>)}\r\n                \r\n            </tbody>\r\n        </table> \r\n        <Paggination itemCount={filtered.length} pageSize={pageSize} currentPage={currentPage} onPageChange={this.handlePageChange}/>\r\n        </div>\r\n       \r\n        </div>\r\n           \r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default Movie;","D:\\ReactDemo\\movieapp\\src\\services\\movieServices.js",["68"],"import http from '../services/httpService';\r\nimport config from '../config.json';\r\nconst apiEndPoint = `${config.apiUrl}`;\r\nexport function getMovies() {\r\n  return http.get(\"https://sometimes-maybe-flaky-api.gdshive.io/\");\r\n}\r\n\r\n","D:\\ReactDemo\\movieapp\\src\\services\\httpService.js",["69"],"import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\n//axios.defaults.headers.common['x-auth-token'] = auth.getJwt();\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurrred.');\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get\n \n};\n","D:\\ReactDemo\\movieapp\\src\\services\\logService.js",["70"],"//import Raven from 'raven-js';\n\nfunction init() {\n  // Raven.config(\"ADD YOUR OWN API KEY\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  // Raven.captureException(error);\n  console.log(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","D:\\ReactDemo\\movieapp\\src\\components\\paggination.jsx",["71","72"],"import React from 'react';\r\nimport _ from \"lodash\"\r\nconst Paggination = (props) => {\r\n    const{itemCount,pageSize,onPageChange,currentPage}=props;\r\n   const pageCount =Math.ceil(itemCount/pageSize);\r\n   if(pageCount===1) return null;\r\n  const pages= _.range(1,pageCount+1);\r\n    return (<nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page=><li className={page==currentPage?\"page-item active\":\"page-item\" } key={page}><a  className=\"page-link\"  onClick={()=>onPageChange(page)} >{page}</a></li> )}\r\n            \r\n        </ul>\r\n    </nav>  );\r\n}\r\n \r\nexport default Paggination; ","D:\\ReactDemo\\movieapp\\src\\util\\pagination.js",[],"D:\\ReactDemo\\movieapp\\src\\services\\genreService.js",[],"D:\\ReactDemo\\movieapp\\src\\components\\genreList.jsx",["73"],"import React from 'react';\r\nconst GenreList = (props) => {\r\n    const{items,onItemSelect,selectedItem}=props\r\n    return ( <ul className=\"list-group\">\r\n        {items.map(item=>\r\n        <li className={item==selectedItem?\"list-group-item active\": \"list-group-item\"} key={item._id} onClick={()=>onItemSelect(item)}>{item.name}</li>\r\n        )}\r\n        \r\n    </ul> );\r\n}\r\n \r\nexport default GenreList;","D:\\ReactDemo\\movieapp\\src\\components\\navbar.jsx",["74"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"btn btn-outline-success\" to=\"/\">\r\n        Main\r\n      </Link>\r\n      <button\r\n    \r\n        className=\"navbar-toggler \"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n       \r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n   \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\ReactDemo\\movieapp\\src\\components\\moviesForm.jsx",["75"],"import React, { Component } from 'react';\r\nimport { getMovies} from '../services/movieServices';\r\n\r\nclass MovieForm extends Component {\r\n    state = {\r\n       \r\n         name: this.props.match.params.name ,\r\n      \r\n      };\r\n     \r\n    render() { \r\n        \r\n        return ( <div>\r\n            <h1>{this.state.name}</h1>\r\n            \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default MovieForm;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":41,"column":48,"nodeType":"86","messageId":"87","endLine":41,"endColumn":50},{"ruleId":"80","severity":1,"message":"88","line":3,"column":7,"nodeType":"82","messageId":"83","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":20,"column":1,"nodeType":"91","endLine":23,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":15,"column":1,"nodeType":"91","endLine":18,"endColumn":3},{"ruleId":"84","severity":1,"message":"85","line":10,"column":49,"nodeType":"86","messageId":"87","endLine":10,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":10,"column":107,"nodeType":"94","endLine":10,"endColumn":168},{"ruleId":"84","severity":1,"message":"85","line":6,"column":28,"nodeType":"86","messageId":"87","endLine":6,"endColumn":30},{"ruleId":"80","severity":1,"message":"95","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":23},{"ruleId":"80","severity":1,"message":"96","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":19},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'apiEndPoint' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavLink' is defined but never used.","'getMovies' is defined but never used.","no-global-assign","no-unsafe-negation"]