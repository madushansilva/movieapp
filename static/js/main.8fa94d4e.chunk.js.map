{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieServices.js","components/paggination.jsx","services/genreService.js","components/genreList.jsx","components/movies.jsx","util/pagination.js","components/navbar.jsx","components/moviesForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","config","apiUrl","Paggination","props","itemCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","className","map","page","onClick","genres","_id","name","GenreList","items","onItemSelect","selectedItem","item","Movie","state","movies","selectedGenre","sortColumn","path","order","handlePageChange","setState","handleGenreSelect","genre","handleSort","http","data","filter","g","this","count","length","allMovies","filtered","m","pageNumber","startIndex","slice","take","value","paginate","orderBy","Fragment","movie","to","productionYear","synopsisShort","Component","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","MovieForm","match","params","App","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fa94d4e.chunk.js","sourcesContent":["//import Raven from 'raven-js';\n\nfunction init() {\n  // Raven.config(\"ADD YOUR OWN API KEY\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  // Raven.captureException(error);\n  console.log(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from 'axios';\nimport logger from './logService';\nimport { toast } from 'react-toastify';\n\n//axios.defaults.headers.common['x-auth-token'] = auth.getJwt();\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error('An unexpected error occurrred.');\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get\n \n};\n","import http from '../services/httpService';\r\nimport config from '../config.json';\r\nconst apiEndPoint = `${config.apiUrl}`;\r\nexport function getMovies() {\r\n  return http.get(\"https://sometimes-maybe-flaky-api.gdshive.io/\");\r\n}\r\n\r\n","import React from 'react';\r\nimport _ from \"lodash\"\r\nconst Paggination = (props) => {\r\n    const{itemCount,pageSize,onPageChange,currentPage}=props;\r\n   const pageCount =Math.ceil(itemCount/pageSize);\r\n   if(pageCount===1) return null;\r\n  const pages= _.range(1,pageCount+1);\r\n    return (<nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page=><li className={page==currentPage?\"page-item active\":\"page-item\" } key={page}><a  className=\"page-link\"  onClick={()=>onPageChange(page)} >{page}</a></li> )}\r\n            \r\n        </ul>\r\n    </nav>  );\r\n}\r\n \r\nexport default Paggination; ","export const genres = [\n  { _id: \"1\", name: \"Action\" },\n  { _id: \"2\", name: \"Animation\" },\n  { _id: \"3\", name: \"Adventure\" },\n  { _id: \"4\", name: \"Comedy\" },\n  { _id: \"5\", name: \"Fantasy\" },\n \n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import React from 'react';\r\nconst GenreList = (props) => {\r\n    const{items,onItemSelect,selectedItem}=props\r\n    return ( <ul className=\"list-group\">\r\n        {items.map(item=>\r\n        <li className={item==selectedItem?\"list-group-item active\": \"list-group-item\"} key={item._id} onClick={()=>onItemSelect(item)}>{item.name}</li>\r\n        )}\r\n        \r\n    </ul> );\r\n}\r\n \r\nexport default GenreList;","import React, { Component } from 'react';\r\nimport { getMovies} from '../services/movieServices';\r\nimport Paggination from './paggination';\r\nimport { paginate } from '../util/pagination';   \r\nimport { getGenres } from '../services/genreService';\r\nimport GenreList from './genreList';\r\nimport _ from \"lodash\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres:[],\r\n        pageSize:3,\r\n        currentPage:1,\r\n        selectedGenre:null,\r\n        sortColumn: { path: 'title', order: 'asd' },\r\n      }\r\n\r\n      async componentDidMount() {\r\n      \r\n        const { data: movies } = await getMovies();\r\n        const genres= [{name:\"All Genres\"},...getGenres()]\r\n        this.setState({movies,genres});\r\n        \r\n        \r\n      }\r\n      handlePageChange=page=>{\r\n          this.setState({currentPage:page})\r\n\r\n      }\r\n\r\n      handleGenreSelect=genre=>{\r\n        this.setState({selectedGenre:genre, currentPage:1});\r\n      }\r\n      handleSort=path=>{\r\n\r\n        const sortColumn={...this.state.sortColumn};\r\n        if(sortColumn.path===path)\r\n            sortColumn.order =(sortColumn.order==\"asc\")?\"desc\": \"asc\";\r\n        \r\nelse{\r\n    sortColumn.path=path;\r\n    sortColumn.order=\"asc\";\r\n}\r\n\r\n        this.setState({sortColumn});\r\n      }\r\n    render() { \r\n        const {length:count}=this.state.movies;\r\n        const{pageSize,currentPage,movies:allMovies,selectedGenre,sortColumn}=this.state;\r\n\r\n        const filtered= selectedGenre && selectedGenre._id?allMovies.filter(m=>m.genre===selectedGenre.name):allMovies;\r\n        \r\n        const sorted= _.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n        \r\n        const movies=paginate(sorted,currentPage,pageSize);\r\n        if(count===0)\r\n        return(<p>There are no movies in the database</p>)\r\n\r\n        return (<React.Fragment>\r\n              <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                  <GenreList items={this.state.genres} onItemSelect={this.handleGenreSelect}\r\n                  selectedItem={selectedGenre}/>\r\n              </div>\r\n        <div className=\"col\">\r\n        <p>Showing {filtered.length} movies in the database</p>\r\n            <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"name\")}>Name </th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"productionYear\")}>Year</th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"genre\")}>Genre</th>\r\n                    <th className=\"clickable\" onClick={()=>this.handleSort(\"synopsisShort\")}>Synopsis</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {movies.map(movie=><tr>\r\n                    <td > <Link to={`/movies/${movie.name}`}>{movie.name}</Link></td>\r\n                    <td >{movie.productionYear}</td>\r\n                    <td >{movie.genre}</td>\r\n                    <td >{movie.synopsisShort}</td>\r\n                </tr>)}\r\n                \r\n            </tbody>\r\n        </table> \r\n        <Paggination itemCount={filtered.length} pageSize={pageSize} currentPage={currentPage} onPageChange={this.handlePageChange}/>\r\n        </div>\r\n       \r\n        </div>\r\n           \r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default Movie;","import _ from 'lodash';\r\n\r\nexport function paginate(item, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(item).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"btn btn-outline-success\" to=\"/\">\r\n        Main\r\n      </Link>\r\n      <button\r\n    \r\n        className=\"navbar-toggler \"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n       \r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n   \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { getMovies} from '../services/movieServices';\r\n\r\nclass MovieForm extends Component {\r\n    state = {\r\n       \r\n         name: this.props.match.params.name ,\r\n      \r\n      };\r\n     \r\n    render() { \r\n        \r\n        return ( <div>\r\n            <h1>{this.state.name}</h1>\r\n            \r\n        </div>);\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React, { Component } from 'react';\nimport './App.css';\nimport Movie from './components/movies';\nimport NavBar from './components/navbar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport MovieForm from './components/moviesForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <NavBar/>\n      <Switch>\n          <Route\n            path=\"/movies/:name\"\n            render={(props) => <MovieForm {...props}  />}\n          ></Route>\n          <Route\n            path=\"/movies\"\n            render={(props) => <Movie {...props}  />}\n          ></Route>\n        \n          <Redirect from=\"/\" to=\"/movies\" />\n        </Switch>\n      </React.Fragment>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n      <App /></BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}